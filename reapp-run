#!/usr/bin/env node

var Program = require('commander');
var server = require('reapp-server');
var Pack = require('reapp-pack');
var runConfig = require('reapp-pack/config/webpack.run.js');
var checkIsReapp = require('./lib/checkIsReapp');
var resolveAppPath = require('./lib/resolveAppPath');

Program
  .option('-c, --config', 'provide a webpack config, defaults to using reapp-webpack-config')
  .option('-d, --debug', 'output extra information for debugging')
  .option('--nolink', 'dont link webpack modules to ./server_modules')
  .option('-p, --port [number]', 'specify a port [number]', 5283)
  .parse(process.argv);

var dir = process.cwd();

checkIsReapp(dir);

var opts = {
  dir: dir,
  config: Program.config && resolveAppPath(dir, Program.config),
  debug: !!Program.debug,
  port: Number(Program.port),
  wport: Number(Program.port) + 1,
  linkModules: !Program.nolink,
  hot: true
};

if (Program.debug) {
  console.log('CLI received opts:');
  console.dir(opts, { depth: 10 });
  console.log();
}

opts.config = Program.config ?
  require(opts.config) :
  Pack.makeConfig(runConfig, opts);

// run server
server(opts);