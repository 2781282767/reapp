#!/usr/bin/env node

var Program = require('commander');
var server = require('reapp-server');
var makeWebpackConfig = require('reapp-webpack-config');

Program
  .option('-c, --config', 'provide a webpack config, defaults to using reapp-webpack-config')
  .option('-d, --debug', 'output extra information for debugging')
  .option('-e, --entry [path]', 'provide an entry [path] for your app', './app/app')
  .option('-p, --port [number]', 'specify a port [number]', 5283)
  .parse(process.argv);

var dir = process.cwd();

if (Program.entry.indexOf('./') === 0)
  Program.entry = dir + Program.entry.slice(1);

var opts = {
  dir: dir,
  mode: Program.mode || 'development',
  entry: Program.entry,
  debug: !!Program.debug,
  port: Number(Program.port),
  wport: Number(Program.port) + 1,
  hot: true
};

// var STYLE_URL = 'main.css?' + stats.hash;
// var SCRIPT_URL = [].concat(stats.assetsByChunkName.main)[0] + '?' + stats.hash;

if (Program.debug) {
  console.log('CLI received opts:');
  console.dir(opts);
  console.log();
}

// build bundle
opts.config = Program.config ?
  require(Program.config) :
  makeWebpackConfig(opts);

// run server
server(opts);