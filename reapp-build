#!/usr/bin/env node

var Program = require('commander');
var colors = require('colors');
var pack = require('reapp-pack');
var makeLayout = require('reapp-pack/lib/makeLayout');
var webpack = require('reapp-pack/webpack');
var webpackCallback = require('reapp-pack/lib/callback');
var makeBuildDir = require('./lib/makeBuildDir');
var checkIsReapp = require('./lib/checkIsReapp');
var fs = require('fs');

Program
  .option('-d, --debug', 'output extra information for debugging')
  .parse(process.argv);

var dir = process.cwd();

if (Program.debug) {
  console.log('CLI received opts:'.blue);
  console.log(Program);
  console.log();
}

checkIsReapp(dir);

// generate config
var buildConfig = require('reapp-pack/config/build.js');
var config = buildConfig({
  dir: dir,
  linkModules: true,
  debug: Program.debug
});

// html template
var layoutIn = dir + '/assets/layout.html';
var layoutOut = config.output.path + '/index.html';

var layout = makeLayout({
  template: layoutIn,
  port: 3010,
  scripts: Object.keys(config.entry)
});

// copy layout
fs.writeFileSync(layoutOut, layout);
makeBuildDir(dir, run);

function run() {
  console.log('Building...'.yellow, "\n");
  webpack(config, webpackCallback({
    debug: Program.debug
  }));
}