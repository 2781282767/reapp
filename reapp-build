#!/usr/bin/env node

var Program = require('commander');
var Pack = require('reapp-pack');
var util = require('util');
var buildConfig = require('reapp-pack/config/webpack.build.js');
var makeBuildDir = require('./lib/makeBuildDir');
var checkIsReapp = require('./lib/checkIsReapp');
var resolveAppPath = require('./lib/resolveAppPath');

Program
  .option('-d, --debug', 'output extra information for debugging')
  .option('-c, --config <path>', 'provide a config [path] for webpack')
  .option('--nolink', 'dont link webpack modules to ./server_modules')
  .parse(process.argv);

var opts = {
  config: Program.config && resolveAppPath(opts.dir, Program.config),
  dir: process.cwd(),
  debug: !!Program.debug,
  linkModules: !Program.nolink
};

if (opts.debug) {
  console.log('CLI received opts:');
  console.dir(opts);
  console.log();
}

var config = Program.config ?
  require(opts.config) :
  Pack.makeConfig(buildConfig, opts);

checkIsReapp(opts.dir);
makeBuildDir(opts.dir, run);

function run() {
  console.log('Building...', "\n");
  Pack.webpack(config, function(err, stats) {
    if (err)
      console.error(err);
    else if (opts.debug)
      console.log(stats);
  });
}