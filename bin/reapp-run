#!/usr/bin/env node

var Program = require('commander');
var colors = require('colors');
var server = require('reapp-server');
var pack = require('reapp-pack');
var makeLayout = require('reapp-pack/lib/makeLayout');
var webpackServer = require('reapp-pack/webpackServer');
var makeBuildDir = require('../lib/makeBuildDir');
var findConfig = require('../lib/findConfig');

var dir = process.cwd();

Program
  .option('-d, --debug', 'output extra information for debugging')
  .option('-p, --port [number]', 'specify a port [number]', 3010)
  .option('-h, --host [host]', 'specify hostname', 'localhost')
  .option('-e, --env [env]', 'specify an enivornment', 'development')
  .parse(process.argv);

require('../lib/checkIsReapp')(dir);

// debug
if (Program.debug) {
  console.log('CLI received opts:'.blue.bold);
  console.log(Program);
  console.log();
}

// webpack port is next one up
var wport = parseInt(Program.port,10) + 1;

// config
var config = findConfig({
  name: 'run',
  dir: dir,
  port: wport,
  linkModules: true,
  debug: Program.debug,
  env: Program.env,
  hostname: Program.host
});

// html template
var layout = makeLayout({
  template: dir + '/assets/layout.html',
  port: wport,
  hostname: config.hostname,
  scripts: Object.keys(config.entry)
});

// make build dir and run
makeBuildDir(dir, run);

function run() {
  // express
  server({
    dir: dir,
    template: layout,
    debug: Program.debug,
    port: Program.port
  });

  // webpack-dev-server
  webpackServer(config, {
    dir: dir,
    hot: true,
    debug: Program.debug,
    hostname: config.hostname,
    port: wport
  });
}
