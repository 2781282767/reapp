#!/usr/bin/env node

var Program = require('commander');
var colors = require('colors');
var pack = require('reapp-pack');
var makeLayout = require('reapp-pack/lib/makeLayout');
var webpack = require('reapp-pack/webpack');
var webpackCallback = require('reapp-pack/lib/callback');
var makeBuildDir = require('../lib/makeBuildDir');
var findConfig = require('../lib/findConfig');
var fs = require('fs');
var ncp = require('ncp');

var dir = process.cwd();

Program
  .option('-w, --watch', 'watch for changes')
  .option('-d, --debug', 'output extra information for debugging')
  .parse(process.argv);

require('../lib/checkIsReapp')(dir);

if (Program.debug) {
  console.log('CLI received opts:'.blue);
  console.log(Program);
  console.log();
}

var args = Program.args;
var platform = args.length && args[0];

var config = findConfig({
  name: 'build',
  platform: platform,
  dir: dir,
  linkModules: true,
  debug: Program.debug
});

// html template
var layoutIn = dir + '/assets/layout' + (platform ? '-' + platform : '') + '.html';
var layoutOut = config.output.path + '/index.html';

var layout = makeLayout({
  template: layoutIn,
  scripts: Object.keys(config.entry),
  styles: ['main.css'],
  debug: Program.debug
});

// build dir
makeBuildDir(dir, run);

function run() {
  console.log('Building...'.yellow, "\n");

  // copy layout
  fs.writeFile(layoutOut, layout);

  var compiler = webpack(config, webpackCallback({
    debug: Program.debug
  }));
}